#!/usr/bin/env bash
# Profile: chrome-kenp
# Generated by Semsumo v7.1.0-workspace-really-fixed (GNOME Edition - Workspace REALLY Fixed)
set -e
echo "🚀 Initializing chrome-kenp for GNOME/Wayland with FIXED workspace switching..."

# Force external monitor as primary (if connected)
if command -v xrandr >/dev/null 2>&1; then
    EXTERNAL_MONITOR=$(xrandr --query | grep " connected" | grep -v "eDP" | head -1 | awk '{print $1}')
    if [[ -n "$EXTERNAL_MONITOR" ]]; then
        echo "Setting external monitor $EXTERNAL_MONITOR as primary..."
        xrandr --output "$EXTERNAL_MONITOR" --primary
        sleep 1
    fi
fi

# ✅ SIMPLE FIX: Just use wmctrl to switch workspace
if [[ "1" != "0" ]]; then
    echo "🎯 Switching to workspace 1 using wmctrl..."
    TARGET_WORKSPACE=$((1 - 1))  # Convert to 0-based indexing
    
    if command -v wmctrl >/dev/null 2>&1; then
        wmctrl -s "$TARGET_WORKSPACE"
        sleep 2  # Simple 2 second wait
        echo "✅ Switched to workspace 1"
    else
        echo "❌ ERROR: wmctrl not found - install with: nix-env -iA nixpkgs.wmctrl"
        exit 1
    fi
fi

echo "🚀 Starting chrome-kenp on workspace 1..."
echo "COMMAND: profile_chrome Kenp --class Kenp"
echo "VPN MODE: secure"

# Start application with VPN mode
case "secure" in
    bypass)
        if command -v mullvad >/dev/null 2>&1 && mullvad status 2>/dev/null | grep -q "Connected"; then
            if command -v mullvad-exclude >/dev/null 2>&1; then
                echo "Starting with VPN bypass (mullvad-exclude)"
                mullvad-exclude profile_chrome Kenp --class Kenp &
            else
                echo "WARNING: mullvad-exclude not found, starting normally"
                profile_chrome Kenp --class Kenp &
            fi
        else
            echo "VPN not connected, starting normally"
            profile_chrome Kenp --class Kenp &
        fi
        ;;
    secure|*)
        if command -v mullvad >/dev/null 2>&1 && mullvad status 2>/dev/null | grep -q "Connected"; then
            echo "Starting with VPN protection"
        else
            echo "WARNING: VPN not connected! Starting without protection"
        fi
        profile_chrome Kenp --class Kenp &
        ;;
esac

# Save PID
APP_PID=$!
mkdir -p "/tmp/semsumo"
echo "$APP_PID" > "/tmp/semsumo/chrome-kenp.pid"
echo "✅ chrome-kenp started (PID: $APP_PID) on workspace 1"

# Wait for application to load
sleep 3

# Make fullscreen if needed
if [[ "false" == "true" ]]; then
    echo "Waiting 1 seconds for application to load..."
    sleep 1
    
    if command -v gdbus >/dev/null 2>&1; then
        echo "Making fullscreen using gdbus (Wayland)..."
        gdbus call --session --dest org.gnome.Shell --object-path /org/gnome/Shell --method org.gnome.Shell.Eval "global.display.get_focus_window().make_fullscreen()" >/dev/null 2>&1
    elif command -v wmctrl >/dev/null 2>&1; then
        echo "Making fullscreen using wmctrl (XWayland fallback)..."
        WINDOW_ID=$(wmctrl -l | tail -1 | awk '{print $1}')
        if [[ -n "$WINDOW_ID" ]]; then
            wmctrl -i -r "$WINDOW_ID" -b add,fullscreen
        fi
    else
        echo "WARNING: Cannot make fullscreen - press F11 manually"
    fi
fi

echo "🎉 chrome-kenp launch completed!"
exit 0
